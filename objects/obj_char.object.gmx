<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_survivor_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true
canFight = true
canAction = true

pistol = 0
pistolDmg = 50
smg = 0
smgDmg = 25
rifle = 0
rifleDmg = 75
verticalSpeed = 0
vertGravity = 1

pistolUnlocked = true
pistolGotten = false
smgUnlocked = false
smgGotten = false
rifleUnlocked = false
rifleGotten = false

ladderOffset = 10 //offset to ladder in order to trigger climbing (CHANGE LATER!)
ladderCreateOffset = 60 //offset to show key spamming thing
ladderClimbRate = 10
enemyOffset = 48 //for slashing hit detection
bulletOffsetX = 42
bulletOffsetY = -14
defaultImageSpeed = 1
slashImageSpeed = 0.5
shootImageSpeed = 0.5


alarm_set(0,4)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(self.x, self.y, obj_gore)
instance_create(self.x, self.y, obj_gore)
instance_create(self.x, self.y, obj_gore)
instance_create(self.x, self.y, obj_gore)
instance_create(self.x, self.y, obj_gore)
if(obj_director.highscore &gt; global.highscore){
    global.highscore = obj_director.highscore
}
instance_create(0,0,obj_gameover)
with(obj_director){ //destroy director (save score??)
    instance_destroy()
}

if instance_exists(obj_enemy){
    obj_enemy.hspeed = 0
}
if instance_exists(obj_parentbuilding){
    obj_parentbuilding.hspeed = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//trip towards dying Pos
var startingPos = -100
distance = self.x - startingPos 
self.x -= distance * 0.04

alarm_set(2,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//trip towards dying Pos
var dyingPos = 30
distance = self.x - dyingPos 
self.x -= distance * 0.02

if self.x &gt; 51{
    alarm_set(1,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initial walking towards starting post
var startingPos = 224
distance = startingPos - self.x
self.x += distance * 0.02

if self.x &lt; 222{
    alarm_set(0,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Main script to check if player has pressed any buttons and trigger anything that needs to be triggered

moveButton = keyboard_check_pressed(ord("Z"))
combatButton = keyboard_check_pressed(ord("X"))
actionButton = keyboard_check_pressed(ord("C"))

//Climbing
if moveButton and instance_exists(obj_ladderEvent){
    self.y += ladderClimbRate
    if position_meeting(self.x + 5, self.y, obj_ladder){
        climbing = false
        canFight = true
        canAction = true
        verticalSpeed = -20
    }
}

//Move
else if moveButton and canMove{
    //start to climb ladder
    var ladder = instance_position(self.x + ladderOffset, self.y, obj_ladder)
    if ladder != noone{
        self.x = ladder.x
        self.y = ladder.y
        canFight = false
        canAction = false
        instance_create(self.x + ladderCreateOffset, self.y, obj_ladderEvent)
    }
    
    //jump
    if place_meeting(self.x, self.y + 1, obj_ground){ 
        verticalSpeed = -10
    }
}

//Combat
if combatButton and canFight{
    //knife
    slash = instance_create(self.x+enemyOffset, self.y, obj_slash)
    slashConfirm = false
    with(slash){
        enemy = instance_place(self.x, self.y, obj_enemy)
        if enemy{
            obj_char.slashConfirm = true
            with(enemy){
                health -= 100
                if health &lt;= 0{
                    instance_destroy()
                }else{
                    alarm_set(0,1) //trigger for showing health
                }
            }
        }else{
            instance_destroy()
        }
    }
    if slashConfirm {
        sprite_index = spr_survivor_knife_attack
        image_speed = slashImageSpeed
        canFight = false
    //else gun
    }else if rifle &gt; 0{
        rifle--
        bullet = instance_create(self.x + bulletOffsetX, self.y + bulletOffsetY, obj_bullet)
        bullet.damage = rifleDmg
        sprite_index = spr_survivor_rifle_attack
        image_index = 0
        image_speed = shootImageSpeed
    }else if smg &gt; 2{
        smg -= 3
        bullet = instance_create(self.x + bulletOffsetX, self.y + bulletOffsetY, obj_bullet)
        bullet.damage = smgDmg
        bullet.count = 2
        sprite_index = spr_survivor_smg_attack
        image_index = 0
        image_speed = shootImageSpeed
    }else if pistol &gt; 0{
        pistol--
        bullet = instance_create(self.x + bulletOffsetX, self.y + bulletOffsetY, obj_bullet)
        bullet.damage = pistolDmg
        sprite_index = spr_survivor_gun_attack
        image_index = 0
        image_speed = shootImageSpeed
    }
}

//Action
if actionButton and canAction{
    if place_meeting(self.x, self.y, obj_gunstore){
        //upgrade hierarchy: pistol -&gt; SMG -&gt; rifle
        if pistolGotten == false{
            pistolGotten = true
        } else if smgUnlocked and smgGotten == false{
            smgGotten = true
        } else if rifleUnlocked and rifleGotten == false{
            rifleGotten = true
        } else {
            if rifleGotten{ //50% rifle, 30% SMG, 20% pistol
                var tempRand = irandom_range(1,10)
                if tempRand &gt; 5{
                    rifle += 5
                } else if tempRand &gt; 2 {
                    smg += 6
                } else{
                    pistol += 2
                }
            } else if smgGotten{//80% SMG, 20% pistol
                var tempRand = irandom_range(1,5)
                if tempRand &gt; 1{
                    smg += 6
                } else{
                    pistol += 2
                }
            } else  { //100% pistol
                pistol += 2
            }
        }
    }else if place_meeting(self.x, self.y, obj_bookstore){
    
    }else if place_meeting(self.x, self.y, obj_pawnstore){
        if rifleGotten{ //50% rifle, 30% SMG, 20% pistol
            var tempRand = irandom_range(1,10)
            if tempRand &gt; 5{
                rifle += 2
            } else if tempRand &gt; 2 {
                smg += 3
            } else{
                pistol += 1
            }
        } else if smgGotten{//80% SMG, 20% pistol
            var tempRand = irandom_range(1,5)
            if tempRand &gt; 1{
                smg += 3
            } else{
                pistol += 1
            }
        } else { //100% pistol
            pistol += 1
        }
    }
}

//collision checking for jumping
var ground = instance_place(self.x, self.y + verticalSpeed, obj_ground)
if ground != noone{
    self.y = ground.y - ground.sprite_yoffset 
    - self.sprite_height + self.sprite_yoffset //complicated formula for landing
}else{
    self.y += verticalSpeed
    verticalSpeed += vertGravity
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_easytrap">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if self.x &gt; 200{//trip once
    alarm_set(1,1)
    alarm_set(0,300)
}
else{
    alarm_set(2,1)//trip twice, die
    alarm_set(11,45)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//reset gun animation
if sprite_index == spr_survivor_rifle_attack
        or sprite_index == spr_survivor_smg_attack
        or sprite_index == spr_survivor_gun_attack
        or sprite_index == spr_survivor_knife_attack{
    sprite_index = spr_survivor_walk
    image_speed = defaultImageSpeed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
