<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_survivor_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true
canFight = true
canAction = true

pistol = 0
smg = 0
rifle = 0
verticalSpeed = 0
vertGravity = 1

pistolUnlocked = true
pistolGotten = false
smgUnlocked = false
smgGotten = false
smgCounter = 0;
rifleUnlocked = false
rifleGotten = false

ladderOffset = 10 //offset to ladder in order to trigger climbing (CHANGE LATER!)
ladderCreateOffset = 60 //offset to show key spamming thing
enemyOffset = 48 //for slashing hit detection
bulletOffsetX = 42
bulletOffsetY = -14
defaultImageSpeed = 1
slashImageSpeed = 0.5
shootImageSpeed = 0.5

alarm[0] = 4;
alarm_set(90, 3) //pistol book xDDDDD
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(sound_hit, 0, false)
repeat(5) instance_create(self.x, self.y, obj_gore)

if(obj_director.highscore &gt; global.highscore)
{
    global.highscore = obj_director.highscore;
}

var temp = instance_create(0,0,obj_gameover);
temp.highscore = obj_director.highscore;
with(obj_director) instance_destroy();

with(all) hspeed = 0;
with(obj_dust) hspeed = -5;
with(obj_bullet) hspeed = 40;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoot the SMG in bursts (Disabled).

/*
audio_play_sound(sound_shoot, 0, false);
smg--; smgCounter--;  
instance_create(self.x + bulletOffsetX, self.y + bulletOffsetY, obj_bullet);

if(smgCounter &gt; 0) alarm[4] = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn a random page.
page = instance_create(self.x, self.y, obj_gorepage)
page.sprite_index = spr_pistolbook
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move survivor closer to dying position.
var startingPos = -100
distance = self.x - startingPos 
self.x -= distance * 0.04

alarm_set(2,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move survivor closer to dying position.
var dyingPos = 30
distance = self.x - dyingPos 
self.x -= distance * 0.02

if self.x &gt; 51{
    alarm_set(1,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move towards starting position.
distance = 224 - x;
x += distance * 0.04;

if(self.x &lt; 225) alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Main script to check if player has pressed any buttons and trigger anything that needs to be triggered

//Move
if(Input.climb &amp;&amp; canMove)
{
    //If touching ladder, jump to the top of ladder...
    var ladder = instance_place(self.x, self.y, obj_ladder);
    if(ladder)
    {
        x = ladder.x + 32;
        y = ladder.y;
    }
    
    //...otherwise jump.
    if place_meeting(self.x, self.y + 1, obj_ground)
    {
        audio_play_sound(sound_jump,0,false) ;
        verticalSpeed = -12;
    }
}

//Combat
if Input.fight and canFight{
    //knife
    slash = instance_create(self.x+enemyOffset, self.y, obj_slash)
    slashConfirm = false
    with(slash){
        enemy = instance_place(self.x, self.y, obj_enemy)
        if enemy{
            obj_char.slashConfirm = true
            audio_play_sound(sound_hit,0,false)
            with(enemy){
                hp--;
                if hp &lt; 1{
                    instance_destroy()
                }else{
                    alarm_set(0,1) //trigger for showing health
                }
            }
        }else{
            instance_destroy()
        }
    }
    if slashConfirm {
        sprite_index = spr_survivor_knife_attack
        image_speed = slashImageSpeed
        canFight = false
    //else gun
    }else if rifle &gt; 0{
        audio_play_sound(sound_shoot,0,false)
        rifle--
        bullet = instance_create(self.x + bulletOffsetX, self.y + bulletOffsetY, obj_rifleBullet)
        sprite_index = spr_survivor_rifle_attack
        image_index = 0
        image_speed = shootImageSpeed
    }/*else if smg &gt; 0{
        if(smg &lt; 3) smgCounter = smg;
        else smgCounter = 3;
        
        alarm[4] = 1;
        
        sprite_index = spr_survivor_smg_attack
        image_index = 0
        image_speed = shootImageSpeed 
    }*/else if (pistol &gt; 0 &amp;&amp; smg &lt; 1){
        audio_play_sound(sound_shoot,0,false)
        pistol--
        bullet = instance_create(self.x + bulletOffsetX, self.y + bulletOffsetY, obj_bullet)
        sprite_index = spr_survivor_gun_attack
        image_index = 0
        image_speed = shootImageSpeed
    }
}
else if(Input.fightHold &amp;&amp; canFight)
{
        if(smg &gt; 0 &amp;&amp; rifle &lt; 1 &amp;&amp; alarm[4] &lt; 1)
        {
            smg--;
            instance_create(self.x + bulletOffsetX, self.y + bulletOffsetY, obj_bullet);
            audio_play_sound(sound_shoot,0,false);
        
            sprite_index = spr_survivor_smg_attack;
            image_index = 0
            image_speed = shootImageSpeed;
            alarm[4] = 3;
        }

}

//Action
if Input.action and canAction{
    if place_meeting(self.x, self.y, obj_gunstore){
        //upgrade hierarchy: pistol -&gt; SMG -&gt; rifle
        audio_play_sound(sound_pickup,0,false)
        if pistolGotten == false{
            pistolGotten = true
            gun = instance_create(self.x, self.y, obj_goreammo)
            gun.sprite_index = spr_pistol
        } else if smgUnlocked and smgGotten == false{
            smgGotten = true
            gun = instance_create(self.x, self.y, obj_goreammo)
            gun.sprite_index = spr_smg
        } else if rifleUnlocked and rifleGotten == false{
            rifleGotten = true
            gun = instance_create(self.x, self.y, obj_goreammo)
            gun.sprite_index = spr_rifle
        } else {
            if rifleGotten{ //50% rifle, 30% SMG, 20% pistol
                var tempRand = irandom_range(1,10)
                if tempRand &gt; 5{
                    rifle += 3
                    ammo = instance_create(self.x, self.y, obj_goreammo)
                    ammo.sprite_index = spr_ammo_rifle
                } else if tempRand &gt; 2 {
                    smg += 6
                    ammo = instance_create(self.x, self.y, obj_goreammo)
                    ammo.sprite_index = spr_ammo_smg
                } else{
                    ammo = instance_create(self.x, self.y, obj_goreammo)
                    pistol += 2
                }
            } else if smgGotten{//80% SMG, 20% pistol
                var tempRand = irandom_range(1,5)
                if tempRand &gt; 1{
                    smg += 6
                    ammo = instance_create(self.x, self.y, obj_goreammo)
                    ammo.sprite_index = spr_ammo_smg
                } else{
                    ammo = instance_create(self.x, self.y, obj_goreammo)
                    pistol += 2
                }
            } else  { //100% pistol
                ammo = instance_create(self.x, self.y, obj_goreammo)
                pistol += 2
            }
        }
    }else if place_meeting(self.x, self.y, obj_bookstore){
        audio_play_sound(sound_pickup,0,false)
        obj_bookstore.count++
        if obj_bookstore.count &gt;= 5{
            //upgrade hierarchy for weapons
            if smgUnlocked == false{
                smgUnlocked = true
                page = instance_create(self.x, self.y, obj_gorepage)
                page.sprite_index = spr_smgbook
            } else if smgGotten and rifleUnlocked == false{
                rifleUnlocked = true
                page = instance_create(self.x, self.y, obj_gorepage)
                page.sprite_index = spr_riflebook
            }
        }
        //throw pages up in the air
        page = instance_create(self.x, self.y, obj_gorepage)
    }else if place_meeting(self.x, self.y, obj_pawnstore){
        audio_play_sound(sound_pickup,0,false)
        if rifleGotten{ //50% rifle, 30% SMG, 20% pistol
            var tempRand = irandom_range(1,10)
            if tempRand &gt; 5{
                if irandom_range(0,1) == 1{
                    rifle += 3
                    ammo = instance_create(self.x, self.y, obj_goreammo)
                    ammo.sprite_index = spr_ammo_rifle
                }
            } else if tempRand &gt; 2 {
                if irandom_range(0,1) == 1{
                    smg += 6
                    ammo = instance_create(self.x, self.y, obj_goreammo)
                    ammo.sprite_index = spr_ammo_smg
                }
            } else{
                if irandom_range(0,1) == 1{
                    pistol += 2
                    ammo = instance_create(self.x, self.y, obj_goreammo)
                    ammo.sprite_index = spr_ammo_pistol
                }
            }
        } else if smgGotten{//80% SMG, 20% pistol
            var tempRand = irandom_range(1,5)
            if tempRand &gt; 1{
                if irandom_range(0,1) == 1{
                    smg += 6
                    ammo = instance_create(self.x, self.y, obj_goreammo)
                    ammo.sprite_index = spr_ammo_smg
                }
            } else{
                if irandom_range(0,1) == 1{
                    pistol += 2
                    ammo = instance_create(self.x, self.y, obj_goreammo)
                    ammo.sprite_index = spr_ammo_pistol
                }
            }
        } else { //100% pistol
            if irandom_range(0,1) == 1{
                pistol += 2
                ammo = instance_create(self.x, self.y, obj_goreammo)
                ammo.sprite_index = spr_ammo_pistol
            }
        }
    }
}

//collision checking for jumping
var ground = instance_place(self.x, self.y + verticalSpeed, obj_ground)
if ground != noone{
    self.y = ground.y - ground.sprite_yoffset 
    - self.sprite_height + self.sprite_yoffset //complicated formula for landing
}else{
    self.y += verticalSpeed
    verticalSpeed += vertGravity
}

if place_meeting(self.x, self.y+1, obj_ground){
    instance_create(self.x, self.y + 35, obj_dust)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_easytrap">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(sound_hit,0,false)
if self.x &gt; 200{//trip once
    alarm_set(1,1)
    alarm_set(0,300)
}
else{
    alarm_set(2,1)//trip twice, die
    alarm_set(11,45)
}

instance_create(x, y, obj_gore_trash);
with(other) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//reset gun animation
if sprite_index == spr_survivor_rifle_attack
        or sprite_index == spr_survivor_smg_attack
        or sprite_index == spr_survivor_gun_attack
        or sprite_index == spr_survivor_knife_attack{
    sprite_index = spr_survivor_walk
    image_speed = defaultImageSpeed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_director){
    if obj_director.highscore &gt; 150{
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
